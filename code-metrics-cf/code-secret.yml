AWSTemplateFormatVersion: "2010-09-09"
Description: Criacao do cloudwatch, lambda e dynamodb
Parameters:
  CloudWatchRoleName:
    Description: Nome da Role da CloudWatch
    Type: String
    Default: cf-pipeline-log
  LambdaName:
    Description: Nome do Lambda
    Type: String
    Default: cf-pipeline-log
  DynamoTableName:
    Description: Nome da tabela do dynamodb
    Type: String
    Default: cf-audipipeline
  
Resources:

  LambdaRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Principal:
              Service: ["lambda.amazonaws.com"]
            Action:
              - "sts:AssumeRole"
      Path: "/"
      Policies:
        -
          PolicyName: "root"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              -
                Effect: "Allow"
                Action: 
                  - "lambda:InvokeFunction"
                  - "xray:PutTraceSegments"
                  - "xray:PutTelemetryRecords"
                Resource: "*"


  LambdaAuditPipeline:
    Type: "AWS::Lambda::Function"
    Properties: 
      Handler: index.handle
      Role:
        Fn::GetAtt: [ LambdaRole, Arn ]
      Code: 
        ZipFile: |
           def handle(event,context):
              print("event="event)
              print("context="context)
        
      Runtime: "python3.7"
      MemorySize: 128
      Timeout: 30
      TracingConfig:
        Mode: "Active"
  
  PipelineEventRule: 
    Type: AWS::Events::Rule
    DependsOn: LambdaAuditPipeline
    Properties: 
       Description: "EventRule"
       EventPattern: 
         source: 
           - "aws.codepipeline"
       State: "ENABLED"
       Targets: 
      - 
        Arn: 
          Fn::GetAtt: 
            - "LambdaFunction"
            - "Arn"
        Id: "TargetFunctionV1"
PermissionForEventsToInvokeLambda: 
  Type: AWS::Lambda::Permission
  Properties: 
    FunctionName: 
      Ref: "LambdaFunction"
    Action: "lambda:InvokeFunction"
    Principal: "events.amazonaws.com"
    SourceArn: 
      Fn::GetAtt: 
        - "EventRule"
        - "Arn"
       

